from dataclasses import dataclass
import torch


class DistMatrix:
    def __init__(self):
        self.matrix = self.gen_matrix()

    def gen_matrix(self):
        bond_length = torch.tensor([
            [2.96712, 1.98784, 2.24319, 2.00469, 2.12597],
            [0.00000, 1.60294, 1.48655, 1.28316, 1.78380],
            [0.00000, 0.00000, 1.70875, 1.47971, 1.68691],
            [0.00000, 0.00000, 0.00000, 0.97536, 1.21950],
            [0.00000, 0.00000, 0.00000, 0.00000, 1.85160],
        ])
        return bond_length + bond_length.t() - torch.diag(bond_length.diag())


@dataclass
class D2Params:
    values = {
        (14,14) :  (95.674993, 3.432),
        (14,8)  :  (26.347936, 3.058),
        (14,6)  :  (41.659745, 3.168),
        (14,1)  :  (11.783155, 2.717),
        (14,9)  :  (27.272705, 3.003),
        (8,8)   :  (7.255958, 2.684),
        (8,6)   :  (11.472677, 2.794),
        (8,1)   :  (3.244963, 2.343),
        (8,9)   :  (7.510630, 2.629),
        (6,6)   :  (18.139896, 2.904),
        (6,1)   :  (5.130737, 2.453),
        (6,9)   :  (11.875349, 2.739),
        (1,1)   :  (1.451192, 2.002),
        (1,9)   :  (3.358856, 2.288),
        (9,9)   :  (7.774241, 2.574),

        (14,7)  :  (34.9204616 ,3.1130),
        (7,7)   :  (12.74772 ,2.7940),
        (7,6)   :  (15.205440 ,2.849000),
        (7,1)   :  (4.30106 ,2.3980),
        (7,9)   :  (9.954622 ,2.6840),
    }

@dataclass
class ZBLParams:
    values = {
        (14, 14): (1.598, 2.054),
        (14, 8):  (1.070, 1.376),
        (14, 6):  (1.208, 1.553),
        (14, 1):  (1.079, 1.388),
        (14, 9):  (1.145, 1.472),
        (8, 8):   (0.863, 1.110),
        (8, 6):   (0.800, 1.029),
        (8, 1):   (0.691, 0.888),
        (8, 9):   (0.961, 1.235),
        (6, 6):   (0.920, 1.183),
        (6, 1):   (0.797, 1.024),
        (6, 9):   (0.908, 1.168),
        (1, 1):   (0.525, 0.675),
        (1, 9):   (0.657, 0.844),
        (9, 9):   (0.997, 1.282),

        (14, 7): (1.104, 1.420),
        (7, 7): (0.780, 1.002),
        (7, 6): (1.104, 1.420),
        (7, 1): (0.735, 0.945),
        (7, 9): (0.938, 1.206),
    }


@dataclass
class MoleculeInfo:
    pos_dict = {
        'CF' : [
            ('C', [0.0, 0.0, 0.0]),
            ('F',[  -0.67823 ,1.17474 ,0.0]),
            ],
        'CF2':[
            ('C', [0.0, 0.0, 0.0]),
            ('F',[  0     ,0       ,1.39756]),
            ('F',[-0.563, 1.0922,  -0.406]),
        ],
        'CF3':[
            ('C', [0.0, 0.0, 0.0]),
            ('F',[-0.67823, 1.17474, 0.0]),
            ('F',[-0.67823, -1.17474, 0.0]),
            ('F',[1.35647, 0.0, 0.0]),
        ],
        'CHF2':[
            ('C', [0.0, 0.0, 0.0]),
            ('F',[-0.67823, 1.17474, 0.0]),
            ('F',[-0.67823, -1.17474, 0.0]),
            ('H',[1.08509, 0.0, 0.0]),
        ],
        'CH2F':[
            ('C', [0.0, 0.0, 0.0]),
            ('F',[-0.47211, -0.51935, -0.84009]),
            ('H',[0.0, 0.0, 1.09217]),
            ('H',[1.21942, 0.51476, -0.32772]),
        ],
        'F' : [
            ('F',[0.0, 0.0, 0.0]),
        ]
    }
